INFO ESPHome 2024.9.1
INFO Reading configuration /config/esphome/raphsreef.yaml...
substitutions:
  import_config: 'false'
  logger: DEBUG
  sdaPin: '21'
  sclPin: '22'
  dallasPin: '16'
  update_temp: 60s
  cal_0: '0.0'
  cal_100: '100.0'
  range_cool: '74'
  range_warm: '82'
  opticalLowPin: '33'
  opticalHighPin: '32'
  update_water: 60s
  binary_1: '13'
  leak_sensor: '27'
  addPH: '99'
  update_ph: 60s
  addEC: '100'
  update_ec: 60s
  update_button_ec: 60s
  addORP: '98'
  update_orp: 60s
  addCO2: '105'
  update_co2: 60s
  update_button_co2: 60s
  addPMP_3: '103'
  update_pmp_3: 60s
  addPMP_1: '108'
  addPMP_2: '109'
  update_pmp_1: 60s
  update_pmp_2: 60s
  name: raphsreef
  friendly_name: raphsreef
  app_version: 24.8.1
esphome:
  min_version: 2024.6.0
  name: raphsreef
  friendly_name: raphsreef
  name_add_mac_suffix: false
  comment: raphsreef ESP32 - Aquarium Controller & Monitor
  project:
    name: twinsen68.raphsreef
    version: 24.8.1
  on_boot:
  - priority: 800.0
    then:
    - component.update:
        id: water_level
    - button.press:
        id: send_selected_ph
    - button.press:
        id: read_ec
    - button.press:
        id: send_selected_ec
    - button.press:
        id: send_selected_orp
    - button.press:
        id: read_co2
    - button.press:
        id: send_selected_co2
  build_path: build/raphsreef
  area: ''
  platformio_options: {}
  includes: []
  libraries: []
esp32:
  board: esp32dev
  framework:
    version: 2.0.5
    source: ~3.20005.0
    platform_version: platformio/espressif32@5.4.0
    type: arduino
  flash_size: 4MB
  variant: ESP32
dashboard_import:
  package_import_url: github://twinsen68/raphsreef/raphsreef_config.yaml@main
  import_full_config: false
logger:
  level: DEBUG
  baud_rate: 115200
  tx_buffer_size: 512
  deassert_rts_dtr: false
  hardware_uart: UART0
  logs: {}
api:
  encryption:
    key: IyPGah7u1xvvjACRPDSi7dC90bi/r07zWpuO5A8H85o=
  port: 6053
  password: ''
  reboot_timeout: 15min
  actions:
  - then:
    - repeat:
        count: 60
        then:
        - button.press:
            id: read_ph
        - delay: 1s
    variables: {}
    action: ph_read_continous
  - then:
    - lambda: !lambda |-
        id(ph_ezo).set_calibration_point_mid(7.00);
    variables: {}
    action: ph_calibrate_mid_7
  - then:
    - lambda: !lambda |-
        id(ph_ezo).set_calibration_point_low(4.00);
    variables: {}
    action: ph_calibrate_low_4
  - then:
    - lambda: !lambda |-
        id(ph_ezo).set_calibration_point_high(10.00);
    variables: {}
    action: ph_calibrate_high_10
  - then:
    - lambda: !lambda |-
        id(ph_ezo).set_calibration_point_high(10.01);
    variables: {}
    action: ph_calibrate_high_1001
  - then:
    - repeat:
        count: 60
        then:
        - button.press:
            id: read_ec
        - delay: 1s
    variables: {}
    action: ec_read_continous
  - then:
    - lambda: !lambda |-
        id(ec_ezo).send_custom("Cal,dry");
    variables: {}
    action: ec_calibrate_dry
  - then:
    - lambda: !lambda |-
        id(ec_ezo).send_custom("Cal,low,12880");
    variables: {}
    action: ec_calibrate_low_12880
  - then:
    - lambda: !lambda |-
        id(ec_ezo).send_custom("Cal,high,80000");
    variables: {}
    action: ec_calibrate_high_80000
  - then:
    - repeat:
        count: 60
        then:
        - button.press:
            id: read_orp
        - delay: 1s
    variables: {}
    action: orp_read_continous
  - then:
    - lambda: !lambda |-
        id(orp_ezo).send_custom("Cal,225");
    variables: {}
    action: orp_calibrate_225
  - variables:
      dose_volume: float
    then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_white
        volume: !lambda |-
          return dose_volume;
    action: pump_white_dose_volume
  - variables:
      dose_volume: float
      dose_time: float
    then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_white
        volume: !lambda |-
          return dose_volume;
        duration: !lambda |-
          return dose_time;
    action: pump_white_dose_volume_time
  - variables:
      dose_rate: float
      dose_time: float
    then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_white
        volume_per_minute: !lambda |-
          return dose_rate;
        duration: !lambda |-
          return dose_time;
    action: pump_white_dose_flow_rate_time
  - variables:
      actual_volume: float
    then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_white
        volume: !lambda |-
          return actual_volume;
    action: pump_white_dose_set_calibration
  - variables:
      address: int
    then:
    - ezo_pmp.change_i2c_address:
        id: ezo_pump_white
        address: !lambda |-
          return address;
    action: pump_white_change_address
  - variables:
      dose_volume: float
    then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_red
        volume: !lambda |-
          return dose_volume;
    action: pump_waste_volume
  - variables:
      dose_volume: float
      dose_time: float
    then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_red
        volume: !lambda |-
          return dose_volume;
        duration: !lambda |-
          return dose_time;
    action: pump_waste_volume_time
  - variables:
      dose_rate: float
      dose_time: float
    then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_red
        volume_per_minute: !lambda |-
          return dose_rate;
        duration: !lambda |-
          return dose_time;
    action: pump_waste_flow_rate_time
  - variables:
      actual_volume: float
    then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_red
        volume: !lambda |-
          return actual_volume;
    action: pump_waste_set_calibration
  - variables:
      dose_volume: float
    then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_green
        volume: !lambda |-
          return dose_volume;
    action: pump_clean_volume
  - variables:
      dose_volume: float
      dose_time: float
    then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_green
        volume: !lambda |-
          return dose_volume;
        duration: !lambda |-
          return dose_time;
    action: pump_clean_volume_time
  - variables:
      dose_rate: float
      dose_time: float
    then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_green
        volume_per_minute: !lambda |-
          return dose_rate;
        duration: !lambda |-
          return dose_time;
    action: pump_clean_flow_rate_time
  - variables:
      actual_volume: float
    then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_green
        volume: !lambda |-
          return actual_volume;
    action: pump_clean_set_calibration
  - variables:
      volume: float
      duration: float
    then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_green
        volume: !lambda |-
          return volume;
        duration: !lambda |-
          return duration;
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_red
        volume: !lambda |-
          return volume;
        duration: !lambda |-
          return duration;
    action: pump_water_change
  - variables:
      volume: float
    then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_green
        volume: !lambda |-
          return volume;
    - ezo_pmp.dose_volume:
        id: ezo_pump_red
        volume: !lambda |-
          return volume;
    action: pump_water_change_quick
  - variables:
      address: int
    then:
    - ezo_pmp.change_i2c_address:
        id: ezo_pump_red
        address: !lambda |-
          return address;
    action: pump_waste_change_address
  - variables:
      address: int
    then:
    - ezo_pmp.change_i2c_address:
        id: ezo_pump_green
        address: !lambda |-
          return address;
    action: pump_clean_change_address
ota:
- platform: esphome
  version: 2
  port: 3232
wifi:
  ap:
    ap_timeout: 1min
  domain: .local
  reboot_timeout: 15min
  power_save_mode: LIGHT
  fast_connect: false
  passive_scan: false
  enable_on_boot: true
  networks:
  - ssid: Freebox-6A508A 2,4Ghz
    password: mellina%-alexandrea!-umbra34-legebar4
    priority: 0.0
  use_address: raphsreef.local
captive_portal: {}
web_server:
  port: 80
  version: 2
  enable_private_network_access: true
  include_internal: false
  ota: true
  log: true
  css_url: ''
  js_url: https://oi.esphome.io/v2/www.js
improv_serial: {}
i2c:
- sda: 21
  scl: 22
  scan: true
  id: bus_a
  frequency: 50000.0
light:
- platform: status_led
  id: internal_led
  pin:
    number: 2
    ignore_strapping_warning: true
    mode:
      output: true
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_pin_validation_error: false
    drive_strength: 20.0
  disabled_by_default: false
  restore_mode: ALWAYS_OFF
  name: internal_led
  internal: true
sensor:
- platform: internal_temperature
  name: Internal Temperature
  disabled_by_default: false
  force_update: false
  unit_of_measurement: Â°C
  accuracy_decimals: 1
  device_class: temperature
  state_class: measurement
  entity_category: diagnostic
  update_interval: 60s
- platform: wifi_signal
  name: WiFi Signal dB
  disabled_by_default: true
  id: wifi_signal_db
  update_interval: 60s
  entity_category: diagnostic
  force_update: false
  unit_of_measurement: dBm
  accuracy_decimals: 0
  device_class: signal_strength
  state_class: measurement
- platform: copy
  source_id: wifi_signal_db
  name: WiFi Signal Strength
  filters:
  - lambda: !lambda |-
      return min(max(2 * (x + 100.0), 0.0), 100.0);
  unit_of_measurement: '%'
  entity_category: diagnostic
  disabled_by_default: false
  force_update: false
  accuracy_decimals: 0
  device_class: signal_strength
  state_class: measurement
- platform: uptime
  name: Uptime
  disabled_by_default: false
  force_update: false
  unit_of_measurement: s
  icon: mdi:timer-outline
  accuracy_decimals: 0
  device_class: duration
  state_class: total_increasing
  entity_category: diagnostic
  update_interval: 60s
  type: seconds
- platform: esp32_hall
  name: ESP32 Hall Sensor
  entity_category: diagnostic
  disabled_by_default: false
  force_update: false
  unit_of_measurement: ÂµT
  icon: mdi:magnet
  accuracy_decimals: 1
  state_class: measurement
  update_interval: 60s
- platform: template
  name: I2C Devices Connected
  id: i2c_devices
  icon: mdi:integrated-circuit-chip
  entity_category: diagnostic
  lambda: !lambda |-
    byte error, address;
    int nDevices;
    nDevices = 0;
    for(address = 1; address < 127; address++) {
      Wire.beginTransmission(address);
      error = Wire.endTransmission();
      if (error == 0) {
        nDevices++;
      }
    }
    return nDevices;
  disabled_by_default: false
  force_update: false
  accuracy_decimals: 1
  update_interval: 60s
- platform: dallas_temp
  id: temp_1
  icon: mdi:thermometer-water
  name: Temperature
  state_class: measurement
  device_class: temperature
  update_interval: 60s
  filters:
  - calibrate_linear:
      method: least_squares
      datapoints:
      - from: 0.0
        to: 0.0
      - from: 100.0
        to: 100.0
  on_value:
  - then:
    - component.update:
        id: temp_range
  disabled_by_default: false
  force_update: false
  unit_of_measurement: Â°C
  accuracy_decimals: 1
  resolution: 12
- platform: template
  state_class: measurement
  device_class: temperature
  id: temp_f
  lambda: !lambda |-
    return id(temp_1).state * 9 / 5 + 32;
  disabled_by_default: false
  force_update: false
  accuracy_decimals: 1
  update_interval: 60s
  name: temp_f
  internal: true
- platform: template
  name: Calibration at 0Â°C - Temp. 1
  id: cal_0_sen
  icon: mdi:thermometer-low
  unit_of_measurement: Â°C
  disabled_by_default: true
  state_class: measurement
  device_class: temperature
  entity_category: diagnostic
  lambda: !lambda |-
    return {0.0};
  force_update: false
  accuracy_decimals: 1
  update_interval: 60s
- platform: template
  name: Calibration at 100Â°C - Temp. 1
  id: cal_100_sen
  icon: mdi:thermometer-high
  unit_of_measurement: Â°C
  disabled_by_default: true
  state_class: measurement
  device_class: temperature
  entity_category: diagnostic
  lambda: !lambda |-
    return {100.0};
  force_update: false
  accuracy_decimals: 1
  update_interval: 60s
- platform: ezo
  icon: mdi:ph
  name: pH
  id: ph_ezo
  address: 0x63
  unit_of_measurement: ''
  accuracy_decimals: 2
  update_interval: 60s
  state_class: measurement
  device_class: ph
  on_custom:
  - then:
    - lambda: !lambda |-
        id(result_ph).publish_state(x);
  on_calibration:
  - then:
    - lambda: !lambda |-
        id(result_ph).publish_state(x);
  on_device_information:
  - then:
    - lambda: !lambda |-
        id(result_ph).publish_state(x);
  on_slope:
  - then:
    - lambda: !lambda |-
        id(result_ph).publish_state(x);
  on_t:
  - then:
    - lambda: !lambda |-
        id(result_ph).publish_state(x);
  disabled_by_default: false
  force_update: false
- platform: ezo
  icon: mdi:shaker-outline
  name: Conductivity
  id: ec_ezo
  address: 0x64
  unit_of_measurement: mS/cm
  accuracy_decimals: 2
  update_interval: 60s
  state_class: measurement
  device_class: volatile_organic_compounds_parts
  filters:
  - lambda: !lambda |-
      return (x / 1000);
  on_custom:
  - then:
    - lambda: !lambda |-
        id(raw_value_ec).publish_state(x);
  on_calibration:
  - then:
    - lambda: !lambda |-
        id(result_ec).publish_state(x);
  on_device_information:
  - then:
    - lambda: !lambda |-
        id(result_ec).publish_state(x);
  on_slope:
  - then:
    - lambda: !lambda |-
        id(result_ec).publish_state(x);
  on_t:
  - then:
    - lambda: !lambda |-
        id(result_ec).publish_state(x);
  disabled_by_default: false
  force_update: false
- platform: template
  name: TDS
  id: sensor_tds
  unit_of_measurement: g/L
  icon: mdi:water-opacity
  accuracy_decimals: 2
  disabled_by_default: true
  update_interval: 60s
  state_class: measurement
  device_class: volatile_organic_compounds_parts
  lambda: !lambda "std::string str = id(raw_value_ec).state;\nstd::vector<std::string>\
    \ v;\nchar * token;\nchar seps[] = \",\";\ntoken = strtok (&str[0],seps);\nwhile\
    \ (token != NULL) {\n  v.push_back(token);\n  token = strtok (NULL, seps);\n}\n\
    if (v.size() == 4) {\n  return (std::stof(v[1]) / 1000);\n} \nelse {\n  return\
    \ NAN;\n}"
  force_update: false
- platform: template
  name: Salinity
  id: sensor_salinity
  icon: mdi:shaker-outline
  unit_of_measurement: ppt
  accuracy_decimals: 2
  update_interval: 60s
  state_class: measurement
  device_class: volatile_organic_compounds_parts
  lambda: !lambda "std::string str = id(raw_value_ec).state;\nstd::vector<std::string>\
    \ v;\nchar * token;\nchar seps[] = \",\";\ntoken = strtok (&str[0],seps);\nwhile\
    \ (token != NULL) {\n  v.push_back(token);\n  token = strtok (NULL, seps);\n}\n\
    if (v.size() == 4) {\n  return std::stof(v[2]);\n} \nelse {\n  return NAN;\n}"
  disabled_by_default: false
  force_update: false
- platform: template
  name: Specific Gravity
  id: sensor_specific_gravity
  icon: mdi:cup-water
  unit_of_measurement: ''
  accuracy_decimals: 3
  update_interval: 60s
  state_class: measurement
  device_class: volatile_organic_compounds_parts
  lambda: !lambda "std::string str = id(raw_value_ec).state;\nstd::vector<std::string>\
    \ v;\nchar * token;\nchar seps[] = \",\";\ntoken = strtok (&str[0],seps);\nwhile\
    \ (token != NULL) {\n  v.push_back(token);\n  token = strtok (NULL, seps);\n}\n\
    if (v.size() == 4) {\n  return std::stof(v[3]);\n} \nelse {\n  return NAN;\n}"
  disabled_by_default: false
  force_update: false
- platform: ezo
  icon: mdi:react
  name: ORP
  id: orp_ezo
  address: 0x62
  unit_of_measurement: mV
  accuracy_decimals: 1
  update_interval: 60s
  state_class: measurement
  device_class: voltage
  on_custom:
  - then:
    - lambda: !lambda |-
        id(result_orp).publish_state(x);
  on_calibration:
  - then:
    - lambda: !lambda |-
        id(result_orp).publish_state(x);
  on_device_information:
  - then:
    - lambda: !lambda |-
        id(result_orp).publish_state(x);
  on_slope:
  - then:
    - lambda: !lambda |-
        id(result_orp).publish_state(x);
  on_t:
  - then:
    - lambda: !lambda |-
        id(result_orp).publish_state(x);
  disabled_by_default: false
  force_update: false
- platform: ezo
  icon: mdi:molecule-co2
  name: Carbon Dioxide
  id: co2_ezo
  address: 0x69
  unit_of_measurement: ppm
  accuracy_decimals: 0
  update_interval: 60s
  state_class: measurement
  device_class: carbon_dioxide
  on_custom:
  - then:
    - lambda: !lambda |-
        id(raw_value_co2).publish_state(x);
  on_calibration:
  - then:
    - lambda: !lambda |-
        id(result_co2).publish_state(x);
  on_device_information:
  - then:
    - lambda: !lambda |-
        id(result_co2).publish_state(x);
  on_slope:
  - then:
    - lambda: !lambda |-
        id(result_co2).publish_state(x);
  on_t:
  - then:
    - lambda: !lambda |-
        id(result_co2).publish_state(x);
  disabled_by_default: false
  force_update: false
- platform: template
  name: CO2 Internal Temperature
  id: sensor_co2_internal_temperature
  accuracy_decimals: 2
  unit_of_measurement: Â°C
  update_interval: 60s
  entity_category: diagnostic
  state_class: measurement
  device_class: temperature
  disabled_by_default: true
  lambda: !lambda "std::string str = id(raw_value_co2).state;\nstd::vector<std::string>\
    \ v;\nchar * token;\nchar seps[] = \",\";\ntoken = strtok (&str[0],seps);\nwhile\
    \ (token != NULL) {\n  v.push_back(token);\n  token = strtok (NULL, seps);\n}\n\
    if (v.size() == 2) {\n  return std::stof(v[1]);\n} \nelse {\n  return NAN;\n}"
  force_update: false
- platform: ezo_pmp
  id: ezo_pump_white
  current_volume_dosed:
    id: current_volume_dosed
    name: Pump - Current Volume Dosed
    icon: mdi:cube-scan
    device_class: volume
    unit_of_measurement: mL
    state_class: total
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_white
  total_volume_dosed:
    id: total_volume_dosed
    name: Pump - Total Volume Dosed
    icon: mdi:timer-sand-empty
    device_class: volume
    unit_of_measurement: mL
    disabled_by_default: true
    force_update: false
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_white
  absolute_total_volume_dosed:
    id: absolute_total_volume_dosed
    name: Pump - Absolute Total Volume Dosed
    icon: mdi:timer-sand-full
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_white
  last_volume_requested:
    id: last_volume_requested
    name: Pump - Last Volume Requested
    icon: mdi:history
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_white
  max_flow_rate:
    id: max_flow_rate
    name: Pump - Max Volume/Time Flow Rate
    icon: mdi:car-speed-limiter
    unit_of_measurement: mL/min
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    device_class: ''
    state_class: ''
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_white
  pump_voltage:
    id: pump_white_voltage
    name: Pump - Voltage
    disabled_by_default: true
    device_class: voltage
    force_update: false
    unit_of_measurement: V
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_red
  current_volume_dosed:
    id: current_volume_dosed_waste
    name: Pump Waste - Current Volume Dosed
    icon: mdi:cube-scan
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_red
  total_volume_dosed:
    id: total_volume_dosed_waste
    name: Pump Waste - Total Volume Dosed
    icon: mdi:timer-sand-empty
    device_class: volume
    unit_of_measurement: mL
    disabled_by_default: true
    force_update: false
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_red
  absolute_total_volume_dosed:
    id: absolute_total_volume_dosed_waste
    name: Pump Waste - Absolute Total Volume Dosed
    icon: mdi:timer-sand-full
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_red
  last_volume_requested:
    id: last_volume_requested_waste
    name: Pump Waste - Last Volume Requested
    icon: mdi:history
    state_class: total
    device_class: volume
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_red
  max_flow_rate:
    id: max_flow_rate_waste
    name: Pump Waste - Max Volume/Time Flow Rate
    icon: mdi:car-speed-limiter
    unit_of_measurement: mL/min
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    device_class: ''
    state_class: ''
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_red
  pump_voltage:
    id: pump_voltage_waste
    name: Pump Waste - Voltage
    disabled_by_default: true
    device_class: voltage
    force_update: false
    unit_of_measurement: V
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_green
  current_volume_dosed:
    id: current_volume_dosed_clean
    name: Pump Clean - Current Volume Dosed
    icon: mdi:cube-scan
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_green
  total_volume_dosed:
    id: total_volume_dosed_clean
    name: Pump Clean - Total Volume Dosed
    icon: mdi:timer-sand-empty
    disabled_by_default: true
    device_class: volume
    unit_of_measurement: mL
    force_update: false
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_green
  absolute_total_volume_dosed:
    id: absolute_total_volume_dosed_clean
    name: Pump Clean - Absolute Total Volume Dosed
    icon: mdi:timer-sand-full
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_green
  last_volume_requested:
    id: last_volume_requested_clean
    name: Pump Clean - Last Volume Requested
    icon: mdi:history
    device_class: volume
    state_class: total
    unit_of_measurement: mL
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_green
  max_flow_rate:
    id: max_flow_rate_clean
    name: Pump Clean - Max Volume/Time Flow Rate
    icon: mdi:car-speed-limiter
    unit_of_measurement: mL/min
    disabled_by_default: false
    force_update: false
    accuracy_decimals: 2
    device_class: ''
    state_class: ''
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_green
  pump_voltage:
    id: pump_voltage_clean
    name: Pump Clean - Voltage
    disabled_by_default: true
    device_class: voltage
    force_update: false
    unit_of_measurement: V
    accuracy_decimals: 2
    state_class: measurement
    entity_category: diagnostic
binary_sensor:
- platform: status
  name: Status
  disabled_by_default: false
  entity_category: diagnostic
  device_class: connectivity
- platform: template
  name: Ideal Temperature
  id: ideal_temp
  icon: mdi:thermometer-check
  lambda: !lambda |-
    if (id(temp_range).state == "OK") {
      return true;
    } else {
      return false;
    }
  disabled_by_default: false
- platform: gpio
  id: os_low
  pin:
    number: 33
    inverted: true
    mode:
      input: true
      pullup: true
      output: false
      open_drain: false
      pulldown: false
    ignore_pin_validation_error: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  name: 'Optical Sensor: Low'
  filters:
  - delayed_on_off: 30ms
  on_state:
  - then:
    - component.update:
        id: water_level
  disabled_by_default: false
- platform: gpio
  id: os_high
  pin:
    number: 32
    inverted: true
    mode:
      input: true
      pullup: true
      output: false
      open_drain: false
      pulldown: false
    ignore_pin_validation_error: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  name: 'Optical Sensor: High'
  filters:
  - delayed_on_off: 30ms
  on_state:
  - then:
    - component.update:
        id: water_level
  disabled_by_default: false
- platform: gpio
  id: binary_1
  pin:
    number: 13
    inverted: true
    mode:
      input: true
      pullup: true
      output: false
      open_drain: false
      pulldown: false
    ignore_pin_validation_error: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  name: Binary 1
  filters:
  - delayed_on_off: 30ms
  disabled_by_default: false
- platform: gpio
  id: leak_sensor
  pin:
    number: 27
    inverted: true
    mode:
      input: true
      pullup: true
      output: false
      open_drain: false
      pulldown: false
    ignore_pin_validation_error: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  name: Leak Sensor
  filters:
  - delayed_on_off: 30ms
  disabled_by_default: false
- platform: ezo_pmp
  id: ezo_pump_white
  pump_state:
    id: pump_white_state
    name: Pump - State
    icon: mdi:pump
    disabled_by_default: false
    entity_category: ''
    device_class: running
- platform: ezo_pmp
  id: ezo_pump_white
  is_paused:
    id: is_paused
    name: Pump - Paused Status
    disabled_by_default: true
    entity_category: ''
    device_class: ''
- platform: ezo_pmp
  id: ezo_pump_red
  pump_state:
    id: pump_state_waste
    icon: mdi:pump
    name: Pump Waste - State
    disabled_by_default: false
    entity_category: ''
    device_class: running
- platform: ezo_pmp
  id: ezo_pump_red
  is_paused:
    id: is_paused_waste
    name: Pump Waste - Paused Status
    disabled_by_default: true
    entity_category: ''
    device_class: ''
- platform: ezo_pmp
  id: ezo_pump_green
  pump_state:
    id: pump_state_clean
    icon: mdi:pump
    name: Pump Clean - State
    disabled_by_default: false
    entity_category: ''
    device_class: running
- platform: ezo_pmp
  id: ezo_pump_green
  is_paused:
    id: is_paused_clean
    name: Pump Clean - Paused Status
    disabled_by_default: true
    entity_category: ''
    device_class: ''
text_sensor:
- platform: template
  name: Hostname
  id: hostname
  icon: mdi:cellphone-arrow-down
  lambda: !lambda |-
    return {"raphsreef"};
  entity_category: diagnostic
  disabled_by_default: false
  update_interval: 60s
- platform: wifi_info
  ip_address:
    name: IP Address
    icon: mdi:ip-network
    disabled_by_default: false
    entity_category: diagnostic
    update_interval: 1s
  ssid:
    name: Connected SSID
    icon: mdi:wifi-arrow-left-right
    disabled_by_default: false
    entity_category: diagnostic
    update_interval: 1s
  bssid:
    name: Connected BSSID
    icon: mdi:wifi-star
    disabled_by_default: true
    entity_category: diagnostic
    update_interval: 1s
  mac_address:
    name: Mac Address
    icon: mdi:chip
    disabled_by_default: false
    entity_category: diagnostic
- platform: template
  name: raphsreef Version
  id: raphsreef_version
  icon: mdi:update
  update_interval: 365d
  lambda: !lambda |-
    return {"24.8.1"};
  entity_category: diagnostic
  disabled_by_default: false
- platform: template
  name: GitHub
  id: github
  icon: mdi:github
  update_interval: 365d
  lambda: !lambda |-
    return {"github.com/twinsen68/raphsreef"};
  entity_category: diagnostic
  disabled_by_default: false
- platform: template
  name: Temperature Range
  id: temp_range
  icon: mdi:thermometer-alert
  update_interval: 60s
  lambda: !lambda "if(id(temp_f).state <= id(range_cool).state) {\n  return {\"Cool\"\
    };\n}\nif(id(temp_f).state < id(range_warm).state && id(temp_f).state > id(range_cool).state)\
    \ {\n  return {\"OK\"};\n}\nif(id(temp_f).state >= id(range_warm).state) {\n \
    \ return {\"Warm\"};\n}     \nelse {\n  return {\"Unknown\"};\n}  "
  disabled_by_default: false
- platform: template
  icon: mdi:waves-arrow-up
  name: Water Level
  id: water_level
  update_interval: 60s
  lambda: !lambda |-
    if(id(os_high).state == true && id(os_low).state == true) {
      // Water Level is High
      return {"High"};
    }
    if(id(os_high).state == false && id(os_low).state == false) {
      // Water Level is Low
      return {"Low"};
    }
    if(id(os_high).state == false && id(os_low).state == true) {
      // Water Level is Normal
      return {"Normal"};
    } else {
      return {"Uknown or Error"};
    }
  disabled_by_default: false
- platform: template
  name: pH - Command Result
  icon: mdi:data-matrix
  id: result_ph
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: EC - Raw Value
  id: raw_value_ec
  icon: mdi:counter
  on_value:
  - then:
    - component.update:
        id: sensor_salinity
    - component.update:
        id: sensor_tds
    - component.update:
        id: sensor_specific_gravity
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: EC - Command Result
  icon: mdi:data-matrix
  id: result_ec
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: ORP - Command Result
  icon: mdi:data-matrix
  id: result_orp
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: CO2 - Raw Value
  icon: mdi:counter
  id: raw_value_co2
  disabled_by_default: true
  on_value:
  - then:
    - component.update:
        id: sensor_co2_internal_temperature
  update_interval: 60s
- platform: template
  name: CO2 - Command Result
  id: result_co2
  disabled_by_default: true
  update_interval: 60s
- platform: ezo_pmp
  id: ezo_pump_white
  dosing_mode:
    id: dosing_mode
    name: Pump - Dosing Mode
    icon: mdi:auto-mode
    disabled_by_default: false
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_white
  calibration_status:
    id: calibration_status
    name: Pump - Calibration Status
    icon: mdi:tape-measure
    disabled_by_default: false
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_red
  dosing_mode:
    id: dosing_mode_waste
    name: Pump Waste - Dosing Mode
    icon: mdi:auto-mode
    disabled_by_default: false
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_red
  calibration_status:
    id: calibration_status_waste
    name: Pump Waste - Calibration Status
    icon: mdi:tape-measure
    disabled_by_default: false
    entity_category: diagnostic
- platform: ezo_pmp
  id: ezo_pump_green
  dosing_mode:
    id: dosing_mode_clean
    name: Pump Clean - Dosing Mode
    icon: mdi:auto-mode
    disabled_by_default: false
    entity_category: ''
- platform: ezo_pmp
  id: ezo_pump_green
  calibration_status:
    id: calibration_status_clean
    name: Pump Clean - Calibration Status
    icon: mdi:tape-measure
    disabled_by_default: false
    entity_category: diagnostic
button:
- platform: restart
  id: restart_button
  name: Restart
  disabled_by_default: false
  icon: mdi:restart
  entity_category: config
  device_class: restart
- platform: factory_reset
  name: Factory Reset (USE WITH CAUTION)
  disabled_by_default: true
  icon: mdi:restart-alert
  entity_category: config
  device_class: restart
- platform: safe_mode
  name: Restart in Safe Mode
  id: restart_safe
  disabled_by_default: false
  icon: mdi:restart-alert
  entity_category: config
  device_class: restart
- platform: shutdown
  name: Shutdown
  disabled_by_default: true
  id: shutdown_button
  icon: mdi:power
  entity_category: config
- platform: template
  name: pH - Read
  id: read_ph
  icon: mdi:read
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda |-
        byte error;
        id(ph_ezo).send_custom("R");
        error = Wire.endTransmission();
        if (error == 0) {
          id(ph_ezo).send_custom("R");
        }
        else {
          ESP_LOGW("custom_ph_read", "No pH sensor detected at address: 99!!");
        }
  disabled_by_default: false
- platform: template
  name: pH - Command Send Selected
  id: send_selected_ph
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda "if (id(select_command_ph).state == \"Read\") {\n  id(ph_ezo).send_custom(\"\
        R\");\n}\n// Get Device Firmware Version\nif (id(select_command_ph).state\
        \ == \"Information\") {\n  id(ph_ezo).get_device_information();\n}\nif (id(select_command_ph).state\
        \ == \"Status\") {\n  id(ph_ezo).send_custom(\"Status\");\n}\nif (id(select_command_ph).state\
        \ == \"Get Slope\") {\n  id(ph_ezo).get_slope();\n}\nif (id(select_command_ph).state\
        \ == \"Check Calibration\") {\n  id(ph_ezo).get_calibration();\n}  \nif (id(select_command_ph).state\
        \ == \"Calibrate @ MID = 7 (WILL RESET CALIBRATION)\") {\n  id(ph_ezo).set_calibration_point_mid(7.00);\n\
        }\nif (id(select_command_ph).state == \"Calibrate @ LOW = 4 (WILL RESET CALIBRATION)\"\
        ) {\n  id(ph_ezo).set_calibration_point_low(4.00);\n}\nif (id(select_command_ph).state\
        \ == \"Calibrate @ HIGH = 10 (WILL RESET CALIBRATION)\") {\n  id(ph_ezo).set_calibration_point_high(10.00);\n\
        }\nif (id(select_command_ph).state == \"Calibrate CLEAR (WILL RESET CALIBRATION)\"\
        ) {\n  id(ph_ezo).clear_calibration();\n}\n// else {\n//   id(ph_ezo).send_custom(\"\
        R\");\n// }"
  disabled_by_default: false
- platform: template
  name: EC - Read
  icon: mdi:read
  id: read_ec
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda |-
        byte error;
        Wire.beginTransmission(100);
        error = Wire.endTransmission();
        if (error == 0) {
          id(ec_ezo).send_custom("R");
        }
        else {
          ESP_LOGW("custom_conductivity_read", "No Conductivity sensor detected at address: 100!");
        }
  disabled_by_default: false
- platform: template
  name: EC - Command Send Selected
  id: send_selected_ec
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda "if (id(select_command_ec).state == \"Read\") {\n  id(ec_ezo).send_custom(\"\
        R\");\n}\nif (id(select_command_ec).state == \"Information\") {\n  id(ec_ezo).get_device_information();\n\
        }\nif (id(select_command_ec).state == \"Status\") {\n  id(ec_ezo).send_custom(\"\
        Status\");\n}\nif (id(select_command_ec).state == \"Get Probe K Value\") {\n\
        \  id(ec_ezo).send_custom(\"K,?\");\n}  \nif (id(select_command_ec).state\
        \ == \"Get TDS Value\") {\n  id(ec_ezo).send_custom(\"TDS,?\");\n}\nif (id(select_command_ec).state\
        \ == \"Set TDS Value to NaCl - 0.48\") {\n  id(ec_ezo).send_custom(\"TDS,0.48\"\
        );\n}\nif (id(select_command_ec).state == \"Get Enabled Parameter(s)\") {\n\
        \  id(ec_ezo).send_custom(\"O,?\");\n}  \nif (id(select_command_ec).state\
        \ == \"Set Probe Type K1\") {\n  id(ec_ezo).send_custom(\"K,1\");\n}\nif (id(select_command_ec).state\
        \ == \"Output Units - All (Default)\") {\n  id(ec_ezo).send_custom(\"O,EC,1\"\
        );\n  id(ec_ezo).send_custom(\"O,TDS,1\");\n  id(ec_ezo).send_custom(\"O,S,1\"\
        );\n  id(ec_ezo).send_custom(\"O,SG,1\");\n}\nif (id(select_command_ec).state\
        \ == \"Output Units - Conductivity\") {\n  id(ec_ezo).send_custom(\"O,EC,1\"\
        );\n  id(ec_ezo).send_custom(\"O,TDS,0\");\n  id(ec_ezo).send_custom(\"O,S,0\"\
        );\n  id(ec_ezo).send_custom(\"O,SG,0\");\n}\nif (id(select_command_ec).state\
        \ == \"Salinity\") {\n  id(ec_ezo).send_custom(\"O,EC,0\");\n  id(ec_ezo).send_custom(\"\
        O,TDS,0\");\n  id(ec_ezo).send_custom(\"O,S,1\");\n  id(ec_ezo).send_custom(\"\
        O,SG,0\");\n}\nif (id(select_command_ec).state == \"Output Units - Specific\
        \ Gravity\") {\n  id(ec_ezo).send_custom(\"O,EC,0\");\n  id(ec_ezo).send_custom(\"\
        O,TDS,0\");\n  id(ec_ezo).send_custom(\"O,S,0\");\n  id(ec_ezo).send_custom(\"\
        O,SG,1\");\n}\nif (id(select_command_ec).state == \"Output Units - TDS\")\
        \ {\n  id(ec_ezo).send_custom(\"O,EC,0\");\n  id(ec_ezo).send_custom(\"O,TDS,1\"\
        );\n  id(ec_ezo).send_custom(\"O,S,0\");\n  id(ec_ezo).send_custom(\"O,SG,0\"\
        );\n}\nif (id(select_command_ec).state == \"Check Calibration\") {\n  id(ec_ezo).get_calibration();\n\
        }  \nif (id(select_command_ec).state == \"Calibrate @ DRY (WILL RESET CALIBRATION)\"\
        ) {\n  id(ec_ezo).send_custom(\"Cal,dry\");\n}\nif (id(select_command_ec).state\
        \ == \"Calibrate @ LOW = 12880 (WILL RESET CALIBRATION)\") {\n  id(ec_ezo).send_custom(\"\
        Cal,low,12880\");\n}\nif (id(select_command_ec).state == \"Calibrate @ HIGH\
        \ = 80000 (WILL RESET CALIBRATION)\") {\n  id(ec_ezo).send_custom(\"Cal,high,80000\"\
        );\n}\nif (id(select_command_ec).state == \"Calibrate CLEAR (WILL RESET CALIBRATION)\"\
        ) {\n  id(ec_ezo).clear_calibration();\n}\n// else {\n//   id(ec_ezo).send_custom(\"\
        R\");\n// }"
  disabled_by_default: false
- platform: template
  name: ORP - Read
  id: read_orp
  icon: mdi:read
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda |-
        byte error;
        id(orp_ezo).send_custom("R");
        error = Wire.endTransmission();
        if (error == 0) {
          id(orp_ezo).send_custom("R");
        }
        else {
          ESP_LOGW("custom_orp_read", "No ORP sensor detected at address: 98!!");
        }
  disabled_by_default: false
- platform: template
  name: ORP - Command Send Selected
  id: send_selected_orp
  entity_category: config
  on_press:
  - then:
    - lambda: !lambda "if (id(select_command_orp).state == \"Read\") {\n  id(orp_ezo).send_custom(\"\
        R\");\n}\n// Get Device Firmware Version\nif (id(select_command_orp).state\
        \ == \"Information\") {\n  id(orp_ezo).get_device_information();\n}\nif (id(select_command_orp).state\
        \ == \"Status\") {\n  id(orp_ezo).send_custom(\"Status\");\n}\nif (id(select_command_orp).state\
        \ == \"Check Calibration\") {\n  id(orp_ezo).get_calibration();\n}  \nif (id(select_command_orp).state\
        \ == \"Calibrate @ 225 mV (WILL RESET CALIBRATION)\") {\n  id(orp_ezo).send_custom(\"\
        Cal,225\");\n}\nif (id(select_command_orp).state == \"Calibrate CLEAR (WILL\
        \ RESET CALIBRATION)\") {\n  id(orp_ezo).clear_calibration();\n}\n// else\
        \ {\n//   id(orp_ezo).send_custom(\"R\");\n// }"
  disabled_by_default: false
- platform: template
  name: CO2 - Read
  id: read_co2
  icon: mdi:read
  entity_category: config
  disabled_by_default: true
  on_press:
  - then:
    - lambda: !lambda |-
        byte error;
        Wire.beginTransmission(105);
        error = Wire.endTransmission();
        if (error == 0) {
          id(co2_ezo).send_custom("R");
        }
        else {
          ESP_LOGW("custom_co2_read", "No Carbon Dioxide sensor detected at address: 105!");
        }
- platform: template
  name: CO2 - Command Send Selected
  id: send_selected_co2
  entity_category: config
  disabled_by_default: true
  on_press:
  - then:
    - lambda: !lambda "if (id(select_command_co2).state == \"Read\") {\n  id(co2_ezo).send_custom(\"\
        R\");\n}\nif (id(select_command_co2).state == \"Information\") {\n  id(co2_ezo).get_device_information();\n\
        }\nif (id(select_command_co2).state == \"Status\") {\n  id(co2_ezo).send_custom(\"\
        Status\");\n}\nif (id(select_command_co2).state == \"Get Enabled Parameter(s)\"\
        ) {\n  id(co2_ezo).send_custom(\"O,?\");\n}  \nif (id(select_command_co2).state\
        \ == \"Output Units - Enable Temperature\") {\n  id(co2_ezo).send_custom(\"\
        O,t,1\");\n}\nif (id(select_command_co2).state == \"Output Units - Disable\
        \ Temperature\") {\n  id(co2_ezo).send_custom(\"O,t,0\");\n}\nif (id(select_command_co2).state\
        \ == \"Check Calibration\") {\n  id(co2_ezo).get_calibration();\n}\nelse {\n\
        \  id(co2_ezo).send_custom(\"R\");\n}"
- platform: template
  name: Pump - Dose Volume for Time
  icon: mdi:clock-time-two-outline
  id: dose_over_time
  on_press:
  - then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_white
        volume: !lambda |-
          return id(volume).state;
        duration: !lambda |-
          return id(duration).state;
  disabled_by_default: false
- platform: template
  name: Pump - Dose Continuously
  icon: mdi:infinity
  id: dose_continuously
  on_press:
  - then:
    - ezo_pmp.dose_continuously:
        id: ezo_pump_white
  disabled_by_default: false
- platform: template
  name: Pump - Dose Volume
  icon: mdi:pump
  id: dose_volume
  on_press:
  - then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_white
        volume: !lambda |-
          return id(volume).state;
  disabled_by_default: false
- platform: template
  name: Pump - Dose at Volume/Time Flow Rate for Time
  icon: mdi:format-text-wrapping-overflow
  id: dose_flow_rate
  on_press:
  - then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_white
        volume_per_minute: !lambda |-
          return id(flow_rate).state;
        duration: !lambda |-
          return id(duration).state;
  disabled_by_default: false
- platform: template
  name: Pump - Pause Dosing
  icon: mdi:pause
  id: dose_pause
  on_press:
  - then:
    - ezo_pmp.pause_dosing:
        id: ezo_pump_white
  disabled_by_default: false
- platform: template
  name: Pump - Stop Dosing
  icon: mdi:stop
  id: dose_stop
  on_press:
  - then:
    - ezo_pmp.stop_dosing:
        id: ezo_pump_white
  disabled_by_default: false
- platform: template
  name: Pump - Clear Total Volume Dosed
  icon: mdi:backspace
  id: dose_clear
  on_press:
  - then:
    - ezo_pmp.clear_total_volume_dosed:
        id: ezo_pump_white
  disabled_by_default: false
- platform: template
  name: Pump - Set Calibration Volume
  icon: mdi:tape-measure
  id: dose_calibrate_volume
  on_press:
  - then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_white
        volume: !lambda |-
          return id(volume).state;
  disabled_by_default: false
- platform: template
  name: Pump - Clear Calibration Volume
  icon: mdi:cancel
  id: dose_calibrate_volume_clear
  on_press:
  - then:
    - ezo_pmp.clear_calibration:
        id: ezo_pump_white
  disabled_by_default: false
- platform: template
  name: Pump Waste - Dose Volume for Time
  icon: mdi:clock-time-two-outline
  id: dose_over_time_waste
  on_press:
  - then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_red
        volume: !lambda |-
          return id(volume_waste).state;
        duration: !lambda |-
          return id(duration_waste).state;
  disabled_by_default: false
- platform: template
  name: Pump Waste - Dose Continuously
  icon: mdi:infinity
  id: dose_continuously_waste
  on_press:
  - then:
    - ezo_pmp.dose_continuously:
        id: ezo_pump_red
  disabled_by_default: false
- platform: template
  name: Pump Waste - Dose Volume
  icon: mdi:pump
  id: dose_volume_waste
  on_press:
  - then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_red
        volume: !lambda |-
          return id(volume_waste).state;
  disabled_by_default: false
- platform: template
  name: Pump Waste - Dose at Volume/Time Flow Rate for Time
  icon: mdi:format-text-wrapping-overflow
  id: dose_flow_rate_waste
  on_press:
  - then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_red
        volume_per_minute: !lambda |-
          return id(flow_rate_waste).state;
        duration: !lambda |-
          return id(duration_waste).state;
  disabled_by_default: false
- platform: template
  name: Pump Waste - Pause Dosing
  icon: mdi:pause
  id: dose_pause_waste
  on_press:
  - then:
    - ezo_pmp.pause_dosing:
        id: ezo_pump_red
  disabled_by_default: false
- platform: template
  name: Pump Waste - Stop Dosing
  icon: mdi:stop
  id: dose_stop_waste
  on_press:
  - then:
    - ezo_pmp.stop_dosing:
        id: ezo_pump_red
  disabled_by_default: false
- platform: template
  name: Pump Waste - Clear Total Volume Dosed
  icon: mdi:backspace
  id: dose_clear_waste
  on_press:
  - then:
    - ezo_pmp.clear_total_volume_dosed:
        id: ezo_pump_red
  disabled_by_default: false
- platform: template
  name: Pump Waste - Set Calibration Volume
  icon: mdi:tape-measure
  id: dose_calibrate_volume_waste
  on_press:
  - then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_red
        volume: !lambda |-
          return id(volume_waste).state;
  disabled_by_default: false
- platform: template
  name: Pump Waste - Clear Calibration Volume
  icon: mdi:cancel
  id: dose_calibrate_volume_clear_waste
  on_press:
  - then:
    - ezo_pmp.clear_calibration:
        id: ezo_pump_red
  disabled_by_default: false
- platform: template
  name: Pump Clean - Dose Volume for Time
  icon: mdi:clock-time-two-outline
  id: dose_over_time_clean
  on_press:
  - then:
    - ezo_pmp.dose_volume_over_time:
        id: ezo_pump_green
        volume: !lambda |-
          return id(volume_clean).state;
        duration: !lambda |-
          return id(duration_clean).state;
  disabled_by_default: false
- platform: template
  name: Pump Clean - Dose Continuously
  icon: mdi:infinity
  id: dose_continuously_clean
  on_press:
  - then:
    - ezo_pmp.dose_continuously:
        id: ezo_pump_green
  disabled_by_default: false
- platform: template
  name: Pump Clean - Dose Volume
  icon: mdi:pump
  id: dose_volume_clean
  on_press:
  - then:
    - ezo_pmp.dose_volume:
        id: ezo_pump_green
        volume: !lambda |-
          return id(volume_clean).state;
  disabled_by_default: false
- platform: template
  name: Pump Clean - Dose at Volume/Time Flow Rate for Time
  icon: mdi:format-text-wrapping-overflow
  id: dose_flow_rate_clean
  on_press:
  - then:
    - ezo_pmp.dose_with_constant_flow_rate:
        id: ezo_pump_green
        volume_per_minute: !lambda |-
          return id(flow_rate_clean).state;
        duration: !lambda |-
          return id(duration_clean).state;
  disabled_by_default: false
- platform: template
  name: Pump Clean - Pause Dosing
  icon: mdi:pause
  id: dose_pause_clean
  on_press:
  - then:
    - ezo_pmp.pause_dosing:
        id: ezo_pump_green
  disabled_by_default: false
- platform: template
  name: Pump Clean - Stop Dosing
  icon: mdi:stop
  id: dose_stop_clean
  on_press:
  - then:
    - ezo_pmp.stop_dosing:
        id: ezo_pump_green
  disabled_by_default: false
- platform: template
  name: Pump Clean - Clear Total Volume Dosed
  icon: mdi:backspace
  id: dose_clear_clean
  on_press:
  - then:
    - ezo_pmp.clear_total_volume_dosed:
        id: ezo_pump_green
  disabled_by_default: false
- platform: template
  name: Pump Clean - Set Calibration Volume
  icon: mdi:tape-measure
  id: dose_calibrate_volume_clean
  on_press:
  - then:
    - ezo_pmp.set_calibration_volume:
        id: ezo_pump_green
        volume: !lambda |-
          return id(volume_clean).state;
  disabled_by_default: false
- platform: template
  name: Pump Clean - Clear Calibration Volume
  icon: mdi:cancel
  id: dose_calibrate_volume_clear_clean
  on_press:
  - then:
    - ezo_pmp.clear_calibration:
        id: ezo_pump_green
  disabled_by_default: false
one_wire:
- platform: gpio
  pin:
    number: 16
    mode:
      output: true
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_pin_validation_error: false
    ignore_strapping_warning: false
    drive_strength: 20.0
number:
- platform: template
  name: Temp. Cool
  id: range_cool
  icon: mdi:thermometer-low
  optimistic: true
  mode: BOX
  min_value: 0.0
  max_value: 100.0
  step: 0.5
  restore_value: true
  initial_value: 74.0
  entity_category: config
  device_class: temperature
  on_value:
  - then:
    - component.update:
        id: temp_range
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: Temp. Warm
  icon: mdi:thermometer-high
  id: range_warm
  optimistic: true
  mode: BOX
  min_value: 0.0
  max_value: 100.0
  step: 0.5
  restore_value: true
  initial_value: 82.0
  entity_category: config
  device_class: temperature
  on_value:
  - then:
    - component.update:
        id: temp_range
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: volume
  icon: mdi:pump
  name: Pump - Volume to Dose
  device_class: volume
  unit_of_measurement: mL
  optimistic: true
  initial_value: 10.0
  min_value: -378541.0
  max_value: 378541.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: duration
  icon: mdi:timer
  name: Pump - Time to Dose
  device_class: duration
  unit_of_measurement: min
  optimistic: true
  initial_value: 1.0
  min_value: 1.0
  max_value: 1440.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: flow_rate
  icon: mdi:waves-arrow-right
  name: Pump - Volume/Time Flow Rate
  unit_of_measurement: mL/min
  optimistic: true
  initial_value: 10.0
  min_value: 0.5
  max_value: 105.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: volume_waste
  icon: mdi:pump
  name: Pump Waste - Volume to Dose
  device_class: volume
  unit_of_measurement: mL
  optimistic: true
  initial_value: 10.0
  min_value: -378541.0
  max_value: 378541.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: duration_waste
  icon: mdi:timer
  name: Pump Waste - Time to Dose
  device_class: duration
  unit_of_measurement: min
  optimistic: true
  initial_value: 1.0
  min_value: 1.0
  max_value: 1440.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: flow_rate_waste
  icon: mdi:waves-arrow-left
  name: Pump Waste - Volume/Time Flow Rate
  unit_of_measurement: mL/min
  optimistic: true
  initial_value: 10.0
  min_value: 0.5
  max_value: 105.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: volume_clean
  icon: mdi:pump
  name: Pump Clean - Volume to Dose
  device_class: volume
  unit_of_measurement: mL
  optimistic: true
  initial_value: 10.0
  min_value: -378541.0
  max_value: 378541.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: duration_clean
  icon: mdi:timer
  name: Pump Clean - Time to Dose
  device_class: duration
  unit_of_measurement: min
  optimistic: true
  initial_value: 1.0
  min_value: 1.0
  max_value: 1440.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
- platform: template
  id: flow_rate_clean
  icon: mdi:waves-arrow-right
  name: Pump Clean - Volume/Time Flow Rate
  unit_of_measurement: mL/min
  optimistic: true
  initial_value: 10.0
  min_value: 0.5
  max_value: 105.0
  mode: BOX
  step: 0.1
  disabled_by_default: false
  update_interval: 60s
select:
- platform: template
  name: pH - Command Select
  id: select_command_ph
  optimistic: true
  entity_category: config
  options:
  - Read
  - Information
  - Status
  - Get Slope
  - Check Calibration
  - Calibrate @ MID = 7 (WILL RESET CALIBRATION)
  - Calibrate @ LOW = 4 (WILL RESET CALIBRATION)
  - Calibrate @ HIGH = 10 (WILL RESET CALIBRATION)
  - Calibrate CLEAR (WILL RESET CALIBRATION)
  initial_option: Check Calibration
  set_action:
    then:
    - logger.log:
        format: 'Chosen option: %s'
        args:
        - !lambda |-
          x.c_str()
        tag: main
        level: DEBUG
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: EC - Command Select
  id: select_command_ec
  optimistic: true
  entity_category: config
  options:
  - Read
  - Information
  - Status
  - Get Probe K Value
  - Get TDS Value
  - Set TDS Value to NaCl - 0.48
  - Get Enabled Parameter(s)
  - Set Probe Type K1
  - Output Units - All (Default)
  - Output Units - Conductivity
  - Output Units - Salinity
  - Output Units - Specific Gravity
  - Output Units - TDS
  - Check Calibration
  - Calibrate @ DRY (WILL RESET CALIBRATION)
  - Calibrate @ LOW = 12880 (WILL RESET CALIBRATION)
  - Calibrate @ HIGH = 80000 (WILL RESET CALIBRATION)
  - Calibrate CLEAR (WILL RESET CALIBRATION)
  initial_option: Check Calibration
  set_action:
    then:
    - logger.log:
        format: 'Chosen option: %s'
        args:
        - !lambda |-
          x.c_str()
        tag: main
        level: DEBUG
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: ORP - Command Select
  id: select_command_orp
  optimistic: true
  entity_category: config
  options:
  - Read
  - Information
  - Status
  - Check Calibration
  - Calibrate @ 225 mV (WILL RESET CALIBRATION)
  - Calibrate CLEAR (WILL RESET CALIBRATION)
  initial_option: Check Calibration
  set_action:
    then:
    - logger.log:
        format: 'Chosen option: %s'
        args:
        - !lambda |-
          x.c_str()
        tag: main
        level: DEBUG
  disabled_by_default: false
  update_interval: 60s
- platform: template
  name: CO2 - Command Select
  id: select_command_co2
  disabled_by_default: true
  optimistic: true
  entity_category: config
  options:
  - Read
  - Information
  - Status
  - Get Enabled Parameter(s)
  - Output Units - Enable Temperature
  - Output Units - Disable Temperature
  - Check Calibration
  initial_option: Check Calibration
  set_action:
    then:
    - logger.log:
        format: 'Chosen option: %s'
        args:
        - !lambda |-
          x.c_str()
        tag: main
        level: DEBUG
  update_interval: 60s
interval:
- interval: 60s
  then:
  - button.press:
      id: read_ec
  startup_delay: 0s
- interval: 60s
  then:
  - button.press:
      id: read_co2
  startup_delay: 0s
ezo_pmp:
- id: ezo_pump_white
  address: 0x67
  update_interval: 60s
- id: ezo_pump_red
  address: 0x6C
  update_interval: 60s
- id: ezo_pump_green
  address: 0x6D
  update_interval: 60s
output: []

INFO Configuration is valid!
